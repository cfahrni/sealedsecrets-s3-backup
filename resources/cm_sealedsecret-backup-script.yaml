apiVersion: v1
kind: ConfigMap
metadata:
  name: sealedsecrets-backup-script
data:
  backup.sh: |
    #!/bin/bash

    # Set backup filename
    BACKUP_FILE=sealedsecrets_$(date '+%F').tar.gz

    # Get all active secrets and extract their names
    SECRETS=$(oc get secrets -l sealedsecrets.bitnami.com/sealed-secrets-key=active -o jsonpath='{.items[*].metadata.name}')

    # Create and change to temp directory
    cd $(mktemp -d)

    # Loop through each secret
    for secret in ${SECRETS}; do
        
        # Log secret name
        echo "Saving $secret to disk..."

        # Get the secret in YAML format and save it to a file
        oc get secret $secret -o yaml > secret_$secret.yaml
    done

    # Create archive
    tar czf ${BACKUP_FILE} *.yaml

    # Prepare variables used for curl command
    date="$(date +%Y%m%d)"
    dateFormatted="$(date -R)"
    relativePath="/${S3_BUCKET}/${BACKUP_FILE}"
    contentType="application/octet-stream"
    stringToSign="PUT\n\n${contentType}\n${dateFormatted}\n${relativePath}"
    signature="$(echo -en ${stringToSign} | openssl sha1 -hmac ${S3_SECRET_KEY} -binary | base64)"

    # Upload file to s3 bucket
    # TODO: check without -k flag
    STATUS_CODE=$(curl --silent --output /dev/stderr --write-out "%{http_code}" -k -X PUT -T "${BACKUP_FILE}" \
    -H "Host: ${S3_BUCKET}.${S3_ENDPOINT}" \
    -H "Date: ${dateFormatted}" \
    -H "Content-Type: ${contentType}" \
    -H "Authorization: AWS ${S3_ACCESS_KEY}:${signature}" \
    https://${S3_BUCKET}.${S3_ENDPOINT}/${BACKUP_FILE})

    # Check if upload was successful
    if test $STATUS_CODE -ne 200; then
      exit 1
    fi